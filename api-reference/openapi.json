{
  "openapi": "3.0.1",
  "info": {
    "title": "PreCallAi API",
    "description": "A sample API that uses a campaign store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.precallai.com/api/v1"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/campaign/list": {
      "get": {
        "description": "Returns all campaigns from the system that the user has access to",
        "responses": {
          "200": {
            "description": "Campaign response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/campaign": {
      "post": {
        "description": "Creates a new Campaign",
        "requestBody": {
          "description": "Campaign to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignNew"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Campaign response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/campaign/audiences?id={id}": {
      "post": {
        "description": "Returns all campaign's audiences from the system that the user has access to",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the campaign to get audiences"
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign audiences response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audiences"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/listAssistant": {
      "get": {
        "description": "Returns all assistants from the system that the user has access to",
        "responses": {
          "200": {
            "description": "Assistant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/createAssistant": {
      "post": {
        "description": "Creates a new Assistant",
        "requestBody": {
          "description": "Assistant to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAssistant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Assistant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/updateAssistant?id={id}": {
      "put": {
        "description": "Update a Assistant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the assistant to update"
          }
        ],
        "requestBody": {
          "description": "Assistant to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssistant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Assistant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/deleteassistant?id={id}": {
      "delete": {
        "description": "Deletes a single assistant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of assistant to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Assistant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dialer/list": {
      "get": {
        "description": "Returns all dialers from the system that the user has access to",
        "responses": {
          "200": {
            "description": "Dialer response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dialer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dialer/create": {
      "post": {
        "description": "Creates a new Dialer",
        "requestBody": {
          "description": "Dialer to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDialer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dialer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dialer"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dialer/update?id={id}": {
      "put": {
        "description": "Update a Dialer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the dialer to update"
          }
        ],
        "requestBody": {
          "description": "Dialer to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDialer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dialer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dialer/delete?id={id}": {
      "delete": {
        "description": "Deletes a single dialer based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dialer to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Dialer deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/list": {
      "get": {
        "description": "Returns all Contacts from the system that the user has access to",
        "responses": {
          "200": {
            "description": "Contact response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/create": {
      "post": {
        "description": "Creates a new Contact",
        "requestBody": {
          "description": "Contact to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewContact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contact response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/update?id={id}": {
      "put": {
        "description": "Update a Contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to update"
          }
        ],
        "requestBody": {
          "description": "Contact to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contact response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/delete?id={id}": {
      "delete": {
        "description": "Deletes a single contact based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of contact to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/audience/list?id={id}": {
      "post": {
        "description": "Returns all contact's audiences from the system that the user has access to",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to get audiences"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact audiences response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactAudiences"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/audience/bulk-upload?id={id}": {
      "post": {
        "description": "Bulk upload contact's audiences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to get audiences"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload."
                  }
                },
                "required": ["file"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contact audiences response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "File uploaded successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/audience/create?id={id}": {
      "post": {
        "description": "Creates a new Contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to create audience"
          }
        ],
        "requestBody": {
          "description": "Contact to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAudienceNew"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create Contact audience response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact audience created successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/audience/update?id={id}": {
      "put": {
        "description": "Update Contact Audience",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to update audience"
          }
        ],
        "requestBody": {
          "description": "Contact to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAudienceNew"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update Contact audience response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact audience updated successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contact/audience/delete?id={id}": {
      "delete": {
        "description": "Delete a single contact audience based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of contact audience to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact audience deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playground/list": {
      "get": {
        "description": "Returns all playgrounds from the system that the user has access to",
        "responses": {
          "200": {
            "description": "Playground response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Playground"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playground/call": {
      "post": {
        "description": "Creates a new Playground",
        "requestBody": {
          "description": "Playground to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlayground"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Playground response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playground"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Campaign": {
        "type": "object",
        "properties": {
          "campaigns_name": {
            "description": "The name of the campaign",
            "type": "string"
          },
          "assistant_name": {
            "description": "The name of the assistant",
            "type": "string"
          },
          "contact_name": {
            "description": "The name of the contact",
            "type": "string"
          },
          "dialer_name": {
            "description": "The name of the dialer",
            "type": "string"
          },
          "dialer_type": {
            "description": "The type of the dialer",
            "type": "string"
          },
          "phone_number": {
            "description": "phone number",
            "type": "string"
          },
          "started_at": {
            "description": "started date",
            "type": "string"
          },
          "is_started": {
            "description": "Is started",
            "type": "boolean"
          },
          "is_automation": {
            "description": "Is automation",
            "type": "boolean"
          }
        }
      },
      "Audiences": {
        "type": "object",
        "properties": {
          "first_name": {
            "description": "First name",
            "type": "string"
          },
          "last_name": {
            "description": "Last name",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "phone": {
            "description": "phone number",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "type": "string"
          },
          "call_duration_in_sec": {
            "description": "Call duration in second",
            "type": "string"
          },
          "call_sentiment": {
            "description": "Call sentiment",
            "type": "string"
          },
          "calltranscribe": {
            "description": "Call transcribe",
            "type": "string"
          },
          "is_call_transferred": {
            "description": "Call transferred action",
            "type": "boolean"
          },
          "is_meeting_scheduled": {
            "description": "Meeting scheduled action",
            "type": "boolean"
          },
          "is_message_sent": {
            "description": "Message sent action",
            "type": "boolean"
          },
          "recording_url": {
            "description": "Recording url",
            "type": "string"
          },
          "error": {
            "description": "Error",
            "type": "string"
          }
        }
      },
      "CampaignNew": {
        "required": [
          "campaigns_name",
          "assistant_id",
          "contacts_id",
          "dialer_id"
        ],
        "type": "object",
        "properties": {
          "campaigns_name": {
            "description": "The name of the campaign",
            "type": "string"
          },
          "assistant_id": {
            "description": "The id of the assistant",
            "type": "string"
          },
          "contacts_id": {
            "description": "The id of the contact",
            "type": "string"
          },
          "dialer_id": {
            "description": "The id of the dialer",
            "type": "string"
          },
          "scheduled_at": {
            "description": "Scheduled date",
            "type": "string"
          },
          "is_automation": {
            "description": "Is automation",
            "type": "boolean"
          }
        }
      },
      "NewCampaign": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CampaignNew"
          },
          {
            "type": "object"
          }
        ]
      },
      "Assistant": {
        "required": [
          "type",
          "name",
          "company_name",
          "gender",
          "accent",
          "goal",
          "start_speech",
          "voice_id",
          "voice_name",
          "script",
          "maximum_time_per_call"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Type of assistant",
            "type": "string"
          },
          "name": {
            "description": "The name of the assistant",
            "type": "string"
          },
          "company_name": {
            "description": "The name of the company",
            "type": "string"
          },
          "gender": {
            "description": "The gender",
            "type": "string"
          },
          "accent": {
            "description": "The accent",
            "type": "string"
          },
          "actions": {
            "description": "The actions",
            "type": "array"
          },
          "goal": {
            "description": "The goal of the assistant",
            "type": "string"
          },
          "start_speech": {
            "description": "Start speech",
            "type": "string"
          },
          "voice_id": {
            "description": "Voice id",
            "type": "string"
          },
          "voice_name": {
            "description": "Voice name",
            "type": "string"
          },
          "voice_note": {
            "description": "Voice note",
            "type": "string"
          },
          "zapier_hook": {
            "description": "Zapier hook",
            "type": "string"
          },
          "script": {
            "description": "Script",
            "type": "string"
          },
          "knowledge_base_Id": {
            "description": "Knowledge base",
            "type": "string"
          },
          "maximum_time_per_call": {
            "description": "Maximum time per call",
            "type": "number"
          },
          "is_recording": {
            "description": "Is recording",
            "type": "boolean"
          },
          "is_voice_note": {
            "description": "Is voice note",
            "type": "boolean"
          }
        }
      },
      "NewAssistant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Assistant"
          },
          {
            "type": "object"
          }
        ]
      },
      "UpdateAssistant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Assistant"
          },
          {
            "type": "object"
          }
        ]
      },
      "Dialer": {
        "required": [
          "dialer_type",
          "name",
          "phone_number",
          "sid",
          "auth_token"
        ],
        "type": "object",
        "properties": {
          "dialer_type": {
            "description": "Dialer type",
            "type": "string"
          },
          "name": {
            "description": "The name of the dialer",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number",
            "type": "string"
          },
          "sid": {
            "description": "The sid",
            "type": "string"
          },
          "auth_token": {
            "description": "Auth token",
            "type": "string"
          }
        }
      },
      "NewDialer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Dialer"
          },
          {
            "type": "object"
          }
        ]
      },
      "UpdateDialer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Dialer"
          },
          {
            "type": "object"
          }
        ]
      },
      "Contact": {
        "required": ["name", "description"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Contact",
            "type": "string"
          },
          "description": {
            "description": "The description of the Contact",
            "type": "string"
          }
        }
      },
      "NewContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contact"
          },
          {
            "type": "object"
          }
        ]
      },
      "UpdateContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contact"
          },
          {
            "type": "object"
          }
        ]
      },
      "ContactAudiences": {
        "type": "object",
        "properties": {
          "first_name": {
            "description": "First name",
            "type": "string"
          },
          "last_name": {
            "description": "Last name",
            "type": "string"
          },
          "email": {
            "description": "Email",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "phone": {
            "description": "phone number",
            "type": "string"
          },
          "sync_by": {
            "description": "Sync by",
            "type": "string"
          },
          "id": {
            "description": "Id",
            "type": "string"
          }
        }
      },
      "ContactAudienceNew": {
        "type": "object",
        "properties": {
          "first_name": {
            "description": "First name",
            "type": "string"
          },
          "last_name": {
            "description": "Last name",
            "type": "string"
          },
          "email": {
            "description": "Email",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "phone": {
            "description": "phone number",
            "type": "string"
          }
        }
      },

      "Playground": {
        "required": [
          "phone_number",
          "language",
          "gender",
          "goal",
          "start_speech",
          "voice_id",
          "voice_name",
          "script",
          "maximum_time_per_call"
        ],
        "type": "object",
        "properties": {
          "phone_number": {
            "description": "Phone numbers",
            "type": "array"
          },
          "language": {
            "description": "Language",
            "type": "string"
          },
          "is_start_speech_update": {
            "description": "false",
            "type": "boolean"
          },
          "start_speech_wav": {
            "description": "Start speech url",
            "type": "string"
          },
          "gender": {
            "description": "The gender",
            "type": "string"
          },
          "actions": {
            "description": "The actions",
            "type": "array"
          },
          "goal": {
            "description": "The goal of the assistant",
            "type": "string"
          },
          "start_speech": {
            "description": "Start speech",
            "type": "string"
          },
          "voice_id": {
            "description": "Voice id",
            "type": "string"
          },
          "voice_name": {
            "description": "Voice name",
            "type": "string"
          },
          "voice_note": {
            "description": "Voice note",
            "type": "string"
          },
          "zapier_hook": {
            "description": "Zapier hook",
            "type": "string"
          },
          "script": {
            "description": "Script",
            "type": "string"
          },
          "knowledge_base_Id": {
            "description": "Knowledge base",
            "type": "string"
          },
          "maximum_time_per_call": {
            "description": "Maximum time per call",
            "type": "number"
          },
          "is_recording": {
            "description": "Is recording",
            "type": "boolean"
          },
          "is_voice_note": {
            "description": "Is voice note",
            "type": "boolean"
          }
        }
      },
      "NewPlayground": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Playground"
          },
          {
            "type": "object"
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}
